const { execSync } = require('child_process');
const fs = require('fs-extra');
const path = require('path');

console.log('üöÄ D√©marrage de l\'installation intelligente...');

try {
  // V√©rification des pr√©requis
  console.log('üîç V√©rification des pr√©requis...');
  const nodeVersion = execSync('node -v').toString().trim();
  const npmVersion = execSync('npm -v').toString().trim();
  
  console.log(`‚úÖ Node.js ${nodeVersion}, npm ${npmVersion}`);

  // Installation des d√©pendances
  console.log('üì¶ Installation des d√©pendances...');
  execSync('npm install --production --omit=dev --legacy-peer-deps', { stdio: 'inherit' });

  // Cr√©ation des r√©pertoires
  console.log('üìÇ Cr√©ation de l\'arborescence...');
  const dirs = [
    'sessions',
    'storage/backups',
    'storage/media',
    'logs',
    'scripts'
  ];

  dirs.forEach(dir => {
    fs.ensureDirSync(dir);
    console.log(`üìÅ Dossier cr√©√©: ${dir}`);
  });

  // V√©rification du fichier .env
  if (!fs.existsSync('.env')) {
    fs.copyFileSync('.env.example', '.env');
    console.log('‚ö†Ô∏è Fichier .env cr√©√©. Veuillez le configurer avant de d√©marrer!');
  }

  console.log('üéâ Installation termin√©e avec succ√®s!');
  console.log('‚û°Ô∏è Commandes disponibles:');
  console.log('- npm start      : D√©marrer le bot');
  console.log('- npm run dev    : Mode d√©veloppement');
  console.log('- npm run backup : Lancer un backup manuel');

} catch (error) {
  console.error('‚ùå Erreur lors de l\'installation:', error.message);
  process.exit(1);
    
